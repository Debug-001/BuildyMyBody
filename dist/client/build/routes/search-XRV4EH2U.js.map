{
  "version": 3,
  "sources": ["../../../../app/Components/Search.jsx", "../../../../app/routes/search.jsx"],
  "sourcesContent": ["import { Link, Form, useParams, useFetcher, useFetchers } from '@remix-run/react';\nimport { Image, Money, Pagination } from '@shopify/hydrogen';\nimport React, { useRef, useEffect } from 'react';\nimport ProductCard from '~/routes/ProductCard';\n// import ProductCard from './ProductCard';\n\nexport const NO_PREDICTIVE_SEARCH_RESULTS = [\n  { type: 'queries', items: [] },\n  { type: 'products', items: [] },\n  { type: 'collections', items: [] },\n  { type: 'pages', items: [] },\n  { type: 'articles', items: [] },\n];\n\nexport function SearchForm({ searchTerm }) {\n  const inputRef = useRef(null);\n\n  // focus the input when cmd+k is pressed\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.key === 'k' && event.metaKey) {\n        event.preventDefault();\n        inputRef.current?.focus();\n      }\n\n      if (event.key === 'Escape') {\n        inputRef.current?.blur();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <Form method=\"get\" className=\"d-flex justify-content-center\">\n      <input\n        defaultValue={searchTerm}\n        name=\"q\"\n        placeholder=\"Search\u2026\"\n        ref={inputRef}\n        type=\"search\"\n        className=\"search-box w-50\"\n      />\n      &nbsp;\n      <button type=\"submit\" className=\"btn shop-nav-btn \">\n        Search\n      </button>\n    </Form>\n  );\n}\n\nexport function SearchResults({ results }) {\n  if (!results) {\n    return null;\n  }\n  const keys = Object.keys(results);\n  return (\n    <div>\n      {results &&\n        keys.map((type) => {\n          const resourceResults = results[type];\n\n          if (resourceResults.nodes[0]?.__typename === 'Page') {\n            const pageResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultPageGrid key=\"pages\" pages={pageResults} />\n            ) : null;\n          }\n\n          if (resourceResults.nodes[0]?.__typename === 'Product') {\n            const productResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultsProductsGrid\n                key=\"products\"\n                products={productResults}\n              />\n            ) : null;\n          }\n\n          if (resourceResults.nodes[0]?.__typename === 'Article') {\n            const articleResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultArticleGrid\n                key=\"articles\"\n                articles={articleResults}\n              />\n            ) : null;\n          }\n\n          return null;\n        })}\n    </div>\n  );\n}\n\nfunction SearchResultsProductsGrid({ products }) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"search-result\">\n        <h3 className=\"text-center mt-3\">Products</h3>\n        <Pagination connection={products}>\n          {({ nodes, isLoading, NextLink, PreviousLink }) => {\n            const itemsMarkup = nodes.map((product) => (\n              <div className=\"col-12 col-lg-4 col-md-6 col-sm-12\" key={product.title}>\n                <ProductCard product={product} />\n              </div>\n            ));\n\n            return (\n              <div>\n                <div>\n                  <PreviousLink>\n                    {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                  </PreviousLink>\n                </div>\n                <div className=\"row\">{/* Create a row for columns */}\n                  {itemsMarkup}\n                </div>\n                <div>\n                  <NextLink>\n                    {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                  </NextLink>\n                </div>\n              </div>\n            );\n          }}\n        </Pagination>\n        <br />\n      </div>\n    </div>\n\n\n\n  );\n}\n\nfunction SearchResultPageGrid({ pages }) {\n  return (\n    <div className=\"search-result\">\n      <h2>Pages</h2>\n      <div>\n        {pages?.nodes?.map((page) => (\n          <div className=\"search-results-item\" key={page.id}>\n            <Link prefetch=\"intent\" to={`/pages/${page.handle}`}>\n              {page.title}\n            </Link>\n          </div>\n        ))}\n      </div>\n      <br />\n    </div>\n  );\n}\n\nfunction SearchResultArticleGrid({ articles }) {\n  return (\n    <div className=\"search-result\">\n      <h2>Articles</h2>\n      <div>\n        {articles?.nodes?.map((article) => (\n          <div className=\"search-results-item\" key={article.id}>\n            <Link prefetch=\"intent\" to={`/blog/${article.handle}`}>\n              {article.title}\n            </Link>\n          </div>\n        ))}\n      </div>\n      <br />\n    </div>\n  );\n}\n\nexport function NoSearchResults() {\n  return <p className='text-center mt-3' style={{ fontSize: '1.2rem' }}>No results, try a different search.</p>;\n}\n\n/**\n *  Search form component that posts search requests to the `/search` route\n **/\nexport function PredictiveSearchForm({\n  action,\n  children,\n  className = 'predictive-search-form',\n  method = 'POST',\n  ...props\n}) {\n  const params = useParams();\n  const fetcher = useFetcher();\n  const inputRef = useRef(null);\n\n  function fetchResults(event) {\n    const searchAction = action ?? '/api/predictive-search';\n    const localizedAction = params.locale\n      ? `/${params.locale}${searchAction}`\n      : searchAction;\n    const newSearchTerm = event.target.value || '';\n    fetcher.submit(\n      { q: newSearchTerm, limit: '6' },\n      { method, action: localizedAction },\n    );\n  }\n\n  // ensure the passed input has a type of search, because SearchResults\n  // will select the element based on the input\n  useEffect(() => {\n    inputRef?.current?.setAttribute('type', 'search');\n  }, []);\n\n  return (\n    <fetcher.Form\n      {...props}\n      className={className}\n      onSubmit={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!inputRef?.current || inputRef.current.value === '') {\n          return;\n        }\n        inputRef.current.blur();\n      }}\n    >\n      {children({ fetchResults, inputRef, fetcher })}\n    </fetcher.Form>\n  );\n}\n\nexport function PredictiveSearchResults() {\n  const { results, totalResults, searchInputRef, searchTerm } =\n    usePredictiveSearch();\n\n  function goToSearchResult(event) {\n    if (!searchInputRef.current) return;\n    searchInputRef.current.blur();\n    searchInputRef.current.value = '';\n    // close the aside\n    window.location.href = event.currentTarget.href;\n  }\n\n  if (!totalResults) {\n    return <NoPredictiveSearchResults searchTerm={searchTerm} />;\n  }\n  return (\n    <div className=\"predictive-search-results\">\n      <div>\n        {results.map(({ type, items }) => (\n          <PredictiveSearchResult\n            goToSearchResult={goToSearchResult}\n            items={items}\n            key={type}\n            searchTerm={searchTerm}\n            type={type}\n          />\n        ))}\n      </div>\n      {/* view all results /search?q=term */}\n      {searchTerm.current && (\n        <Link onClick={goToSearchResult} to={`/search?q=${searchTerm.current}`}>\n          <p>\n            View all results for <q>{searchTerm.current}</q>\n            &nbsp; \u2192\n          </p>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nfunction NoPredictiveSearchResults({ searchTerm }) {\n  if (!searchTerm.current) {\n    return null;\n  }\n  return (\n    <p>\n      No results found for <q>{searchTerm.current}</q>\n    </p>\n  );\n}\n\nfunction PredictiveSearchResult({ goToSearchResult, items, searchTerm, type }) {\n  const isSuggestions = type === 'queries';\n  const categoryUrl = `/search?q=${searchTerm.current\n    }&type=${pluralToSingularSearchType(type)}`;\n\n  return (\n    <div className=\"predictive-search-result\" key={type}>\n      <Link prefetch=\"intent\" to={categoryUrl} onClick={goToSearchResult}>\n        <h5>{isSuggestions ? 'Suggestions' : type}</h5>\n      </Link>\n      <ul>\n        {items.map((item) => (\n          <SearchResultItem\n            goToSearchResult={goToSearchResult}\n            item={item}\n            key={item.id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction SearchResultItem({ goToSearchResult, item }) {\n  return (\n    <li className=\"predictive-search-result-item\" key={item.id}>\n      <Link onClick={goToSearchResult} to={item.url}>\n        {item.image?.url && (\n          <Image\n            alt={item.image.altText ?? ''}\n            src={item.image.url}\n            width={50}\n            height={50}\n          />\n        )}\n        <div>\n          {item.styledTitle ? (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: item.styledTitle,\n              }}\n            />\n          ) : (\n            <span>{item.title}</span>\n          )}\n          {item?.price && (\n            <small>\n              <Money data={item.price} />\n            </small>\n          )}\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nfunction usePredictiveSearch() {\n  const fetchers = useFetchers();\n  const searchTerm = useRef('');\n  const searchInputRef = useRef(null);\n  const searchFetcher = fetchers.find((fetcher) => fetcher.data?.searchResults);\n\n  if (searchFetcher?.state === 'loading') {\n    searchTerm.current = searchFetcher.formData?.get('q') || '';\n  }\n\n  const search = searchFetcher?.data?.searchResults || {\n    results: NO_PREDICTIVE_SEARCH_RESULTS,\n    totalResults: 0,\n  };\n\n  // capture the search input element as a ref\n  useEffect(() => {\n    if (searchInputRef.current) return;\n    searchInputRef.current = document.querySelector('input[type=\"search\"]');\n  }, []);\n\n  return { ...search, searchInputRef, searchTerm };\n}\n\n/**\n * Converts a plural search type to a singular search type\n * @param type - The plural search type\n * @returns The singular search type\n *\n * @example\n * ```ts\n * pluralToSingularSearchType('articles') // => 'ARTICLE'\n * pluralToSingularSearchType(['articles', 'products']) // => 'ARTICLE,PRODUCT'\n * ```\n */\nfunction pluralToSingularSearchType(type) {\n  const plural = {\n    articles: 'ARTICLE',\n    collections: 'COLLECTION',\n    pages: 'PAGE',\n    products: 'PRODUCT',\n    queries: 'QUERY',\n  };\n\n  if (typeof type === 'string') {\n    return plural[type];\n  }\n\n  return type.map((t) => plural[t]).join(',');\n}\n", "import { defer } from '@shopify/remix-oxygen';\nimport { useLoaderData } from '@remix-run/react';\nimport { getPaginationVariables } from '@shopify/hydrogen';\n\nimport { SearchForm, SearchResults, NoSearchResults } from '~/Components/Search';\nimport Navbar from '~/Components/Navbar';\nimport Footer from '~/Components/Footer';\n\nexport const meta = () => {\n  return [{ title: `Hydrogen | Search` }];\n};\n\nexport async function loader({ request, context }) {\n  const url = new URL(request.url);\n  const searchParams = new URLSearchParams(url.search);\n  const variables = getPaginationVariables(request, { pageBy: 8 });\n  const searchTerm = String(searchParams.get('q') || '');\n\n  if (!searchTerm) {\n    return {\n      searchResults: { results: null, totalResults: 0 },\n      searchTerm,\n    };\n  }\n\n  const data = await context.storefront.query(SEARCH_QUERY, {\n    variables: {\n      query: searchTerm,\n      ...variables,\n    },\n  });\n\n  if (!data) {\n    throw new Error('No search data returned from Shopify API');\n  }\n\n  const totalResults = Object.values(data).reduce((total, value) => {\n    return total + value.nodes.length;\n  }, 0);\n\n  const searchResults = {\n    results: data,\n    totalResults,\n  };\n\n  return defer({ searchTerm, searchResults });\n}\n\nexport default function SearchPage() {\n  const { searchTerm, searchResults } = useLoaderData();\n  return (\n    <>\n      <Navbar />\n      <div className=\"search\">\n        <h1 className=\"text-center\">Search</h1>\n        <SearchForm searchTerm={searchTerm} />\n        {!searchTerm || !searchResults.totalResults ? (\n          <>\n            {!searchTerm ? (\n              <div className=\"text-center mt-3\">\n                <p style={{ fontSize: '1.2rem' }}>\n                  Search from our wide range of products\n                </p></div>\n            ) : (\n              <NoSearchResults />\n            )}\n          </>\n        ) : (\n          <SearchResults results={searchResults.results} />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nconst SEARCH_QUERY = `#graphql\n  fragment SearchProduct on Product {\n    __typename\n    handle\n    id\n    publishedAt\n    title\n    trackingParameters\n    vendor\n    variants(first: 1) {\n      nodes {\n        id\n        image {\n          url\n          altText\n          width\n          height\n        }\n        price {\n          amount\n          currencyCode\n        }\n        compareAtPrice {\n          amount\n          currencyCode\n        }\n        selectedOptions {\n          name\n          value\n        }\n        product {\n          handle\n          title\n        }\n      }\n    }\n  }\n  fragment SearchPage on Page {\n     __typename\n     handle\n    id\n    title\n    trackingParameters\n  }\n  fragment SearchArticle on Article {\n    __typename\n    handle\n    id\n    title\n    trackingParameters\n  }\n  query search(\n    $country: CountryCode\n    $endCursor: String\n    $first: Int\n    $language: LanguageCode\n    $last: Int\n    $query: String!\n    $startCursor: String\n  ) @inContext(country: $country, language: $language) {\n    products: search(\n      query: $query,\n      unavailableProducts: HIDE,\n      types: [PRODUCT],\n      first: $first,\n      sortKey: RELEVANCE,\n      last: $last,\n      before: $startCursor,\n      after: $endCursor\n    ) {\n      nodes {\n        ...on Product {\n          ...SearchProduct\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n    pages: search(\n      query: $query,\n      types: [PAGE],\n      first: 10\n    ) {\n      nodes {\n        ...on Page {\n          ...SearchPage\n        }\n      }\n    }\n    articles: search(\n      query: $query,\n      types: [ARTICLE],\n      first: 10\n    ) {\n      nodes {\n        ...on Article {\n          ...SearchArticle\n        }\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
