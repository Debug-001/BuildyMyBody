{
  "version": 3,
  "sources": ["../../../../app/routes/account.orders._index.jsx"],
  "sourcesContent": ["import { Link, NavLink, useLoaderData } from '@remix-run/react';\nimport { Money, Pagination, getPaginationVariables } from '@shopify/hydrogen';\nimport { json, redirect } from '@shopify/remix-oxygen';\n\nexport const meta = () => {\n  return [{ title: 'Orders' }];\n};\n\nexport async function loader({ request, context }) {\n  const { session, storefront } = context;\n\n  const customerAccessToken = await session.get('customerAccessToken');\n  if (!customerAccessToken?.accessToken) {\n    return redirect('/account/login');\n  }\n\n  try {\n    const paginationVariables = getPaginationVariables(request, {\n      pageBy: 20,\n    });\n\n    const { customer } = await storefront.query(CUSTOMER_ORDERS_QUERY, {\n      variables: {\n        customerAccessToken: customerAccessToken.accessToken,\n        country: storefront.i18n.country,\n        language: storefront.i18n.language,\n        ...paginationVariables,\n      },\n      cache: storefront.CacheNone(),\n    });\n\n    if (!customer) {\n      throw new Error('Customer not found');\n    }\n\n    return json({ customer });\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({ error: error.message }, { status: 400 });\n    }\n    return json({ error }, { status: 400 });\n  }\n}\n\nexport default function Orders() {\n  const { customer } = useLoaderData();\n  const { orders, numberOfOrders } = customer;\n  return (\n    <>\n      <div className='ml-5 mr-5'>\n        <div className=\"parent-orders container-fluid \" >\n          <div className=\"card-orders\">\n            <div className=\"orders\">\n\n              <h2 className='text-center'>\n                Orders <small>[{numberOfOrders}]</small>\n              </h2>\n\n\n\n\n              <br />\n              {orders.nodes.length ? (\n                <OrdersTable orders={orders} />\n              ) : (\n                <EmptyOrders />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction OrdersTable({ orders }) {\n  return (\n    <>\n      <div className=\"acccount-orders\">\n        {orders?.nodes.length ? (\n          <Pagination connection={orders}>\n            {({ nodes, isLoading, PreviousLink, NextLink }) => {\n              return (\n                <>\n                  <PreviousLink>\n                    {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                  </PreviousLink>\n                  {nodes.map((order) => {\n                    return <OrderItem key={order.id} order={order} />;\n                  })}\n                  <NextLink>\n                    {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                  </NextLink>\n                </>\n              );\n            }}\n          </Pagination>\n        ) : (\n          <EmptyOrders />\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction EmptyOrders() {\n  return (\n    <>\n      <div className=\"empty-orders\">\n        <p>You haven&apos;t placed any orders yet.</p>\n        <br />\n        <a className=\"btn-shopping\">\n          <Link to=\"/collections\">Start Shopping \u2192</Link>\n        </a>\n      </div>\n    </>\n  );\n}\n\nfunction OrderItem({ order }) {\n  return (\n    <>\n      <fieldset>\n        <div className=\"row\">\n          <div className=\"col-lg-3 col-md-6\">\n            <h5 style={{ fontWeight: 'bold' }}>Orders</h5>\n\n            <Link to={`/account/orders/${order.id}`}>\n              <span style={{ fontSize: '1.2rem', color: 'black' }} >#{order.orderNumber}</span>\n            </Link>\n\n          </div>\n          <div className=\"col-lg-3 col-md-6 mt-3 mt-lg-0 mt-md-0\">\n            <h5 style={{ fontWeight: 'bold' }}>Date</h5>\n            <p style={{ fontSize: '1.2rem' }}>{new Date(order.processedAt).toDateString()}</p>\n          </div>\n          <div className=\"col-lg-3 col-md-6 mt-3 mt-lg-0 \">\n            <h5 style={{ fontWeight: 'bold' }}>Payment Status</h5>\n            <p style={{ fontSize: '1.2rem' }}>{order.financialStatus}</p>\n          </div>\n          <div className=\"col-lg-3 col-md-6 mt-3 mt-lg-0\">\n            <h5 style={{ fontWeight: 'bold' }}>Fulfillment Status</h5>\n            <p style={{ fontSize: '1.2rem' }}>{order.fulfillmentStatus}</p>\n          </div>\n\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-lg-6 col-md-6 col-sm-12 d-flex justify-content-lg-center \">\n            <h5 style={{ fontWeight: 'bold' }}>Total</h5>\n            <span style={{ fontSize: '1.2rem' }} className='ml-4' ><Money data={order.currentTotalPrice} /></span>\n\n          </div>\n          <div className=\"col-lg-6 col-md-6 col-sm-12  d-flex justify-content-lg-center mt-3 mt-lg-0 mt-md-0\">\n\n            <Link to={`/account/orders/${btoa(order.id)}`}>\n              <div className=\"btn shop-nav-btn p-2\" style={{ fontSize: '1.2rem' }} >\n                View Order\n              </div>\n            </Link>\n\n          </div>\n        </div>\n\n        {/* <Link to={`/account/orders/${order.id}`}>\n          <strong>#{order.orderNumber}</strong>\n        </Link> */}\n\n\n      </fieldset>\n      <br />\n    </>\n  );\n}\n\nconst ORDER_ITEM_FRAGMENT = `#graphql\n  fragment OrderItem on Order {\n    currentTotalPrice {\n      amount\n      currencyCode\n    }\n    financialStatus\n    fulfillmentStatus\n    id\n    lineItems(first: 10) {\n      nodes {\n        title\n        variant {\n          image {\n            url\n            altText\n            height\n            width\n          }\n        }\n      }\n    }\n    orderNumber\n    customerUrl\n    statusUrl\n    processedAt\n  }\n`;\n\nexport const CUSTOMER_FRAGMENT = `#graphql\n  fragment CustomerOrders on Customer {\n    numberOfOrders\n    orders(\n      sortKey: PROCESSED_AT,\n      reverse: true,\n      first: $first,\n      last: $last,\n      before: $startCursor,\n      after: $endCursor\n    ) {\n      nodes {\n        ...OrderItem\n      }\n      pageInfo {\n        hasPreviousPage\n        hasNextPage\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n  ${ORDER_ITEM_FRAGMENT}\n`;\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/queries/customer\nconst CUSTOMER_ORDERS_QUERY = `#graphql\n  ${CUSTOMER_FRAGMENT}\n  query CustomerOrders(\n    $country: CountryCode\n    $customerAccessToken: String!\n    $endCursor: String\n    $first: Int\n    $language: LanguageCode\n    $last: Int\n    $startCursor: String\n  ) @inContext(country: $country, language: $language) {\n    customer(customerAccessToken: $customerAccessToken) {\n      ...CustomerOrders\n    }\n  }\n`;"],
  "mappings": "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",
  "names": []
}
